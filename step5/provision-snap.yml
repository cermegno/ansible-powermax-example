---
# Provision a Test Dev Setup from Snapshot of production
- name: Provisioning a test environment from source SG for Powermax
  hosts: localhost
  connection: local
  gather_facts: no
  vars_files:
    - conn3456.yml
    - credentials.yml
    - hosts.yml
    - powermaxports.yml

  vars:
    mv_name: Ansible_TEST_MV
    portgroup_name: "{{ portgroup_name }}"
    host_name: "{{ host_name }}"
    src_sg_name: Ansible_FS_APP
    test_sg_name: Ansible_TEST_SG

    input: &uni_connection_vars
      serial_no: "{{ serial_no }}"
      password: "{{ password }}"
      unispherehost: "{{ unispherehost }}"
      universion: "{{ universion }}"
      user: "{{  user  }}"
      verifycert: "{{ verifycert }}"

  tasks:
    - name: Create a Snapshot for a Storage Group
      dellemc_powermax_snapshot:
        <<: *uni_connection_vars
        sg_name: "{{ src_sg_name }}"
        snapshot_name: "ansible_sg_snap"
        ttl: "1"
        ttl_unit: "days"
        state: "present"

    - name: link  Snapshot to Storage Group
      dellemc_powermax_snapshot:
        <<: *uni_connection_vars
        sg_name: "{{ src_sg_name }}"
        snapshot_name: "ansible_sg_snap"
        generation: 0
        target_sg_name: "{{ test_sg_name }}"
        link_status: "linked"
        state: "present"

    - name: Create host "{{ host_name }}"
      dellemc_powermax_host:
        <<: *uni_connection_vars
        host_name: "{{ host_name }}"
        initiators: "{{ host_initiators }}"
        state: 'present'
        initiator_state: 'present-in-host'

    - name: Create port group "{{ portgroup_name }}"
      dellemc_powermax_portgroup:
        <<: *uni_connection_vars
        portgroup_name: "{{ portgroup_name }}"
        state: "present"
        ports:  "{{ port_list }}"
        port_state: 'present-in-group'

    - name: Create MV "{{ mv_name }}" with existing elements
      dellemc_powermax_maskingview:
        <<: *uni_connection_vars
        mv_name: "{{ mv_name }}"
        portgroup_name: "{{ portgroup_name }}"
        host_name: "{{ host_name }}"
        sg_name: "{{ test_sg_name }}"
        state: 'present'
